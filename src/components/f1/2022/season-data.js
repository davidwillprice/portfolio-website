//All entrant starting (driver/team) data
export const entrantData = {
  drivers: {
    ham: { fName: "Hamilton", sName: "ham", team: "mer" },
    rus: { fName: "Russell", sName: "rus", team: "mer" },
    lec: { fName: "Leclerc", sName: "lec", team: "fer" },
    sai: { fName: "Sainz", sName: "sai", team: "fer" },
    ves: { fName: "Verstappen", sName: "ves", team: "rbr" },
    per: { fName: "Perez", sName: "per", team: "rbr" },
    alo: { fName: "Alonso", sName: "alo", team: "alp" },
    oco: { fName: "Ocon", sName: "oco", team: "alp" },
    sch: { fName: "Schumacher", sName: "sch", team: "has" },
    maz: { fName: "Mazepin", sName: "maz", team: "has" },
    nor: { fName: "Norris", sName: "nor", team: "mcl" },
    ric: { fName: "Ricciardo", sName: "ric", team: "mcl" },
    vet: { fName: "Vettel", sName: "vet", team: "ast" },
    str: { fName: "Stroll", sName: "str", team: "ast" },
    bot: { fName: "Bottas", sName: "bot", team: "alf" },
    zho: { fName: "Zhou", sName: "zho", team: "alf" },
    tsu: { fName: "Tsunoda", sName: "tsu", team: "alt" },
    gas: { fName: "Gasly", sName: "gas", team: "alt" },
    lat: { fName: "Latifi", sName: "lat", team: "wil" },
    alb: { fName: "Albon", sName: "alb", team: "wil" },
  },
  teams: {
    mer: { fName: "Mercedes", sName: "mer" },
    fer: { fName: "Ferrari", sName: "fer" },
    rbr: { fName: "Red Bull", sName: "rbr" },
    mcl: { fName: "McLaren", sName: "mcl" },
    alp: { fName: "Alpine", sName: "alp" },
    alt: { fName: "Alpha Tauri", sName: "alt" },
    ast: { fName: "Aston Martin", sName: "ast" },
    has: { fName: "Haas", sName: "has" },
    alf: { fName: "Alfa Romeo", sName: "alf" },
    wil: { fName: "Williams", sName: "wil" },
  },
}
const {
  ham,
  bot,
  lec,
  sai,
  ves,
  per,
  alo,
  oco,
  sch,
  maz,
  nor,
  ric,
  vet,
  str,
  zho,
  alb,
  tsu,
  gas,
  lat,
  rus,
} = entrantData.drivers
const { mer, fer, rbr, mcl, alp, alt, ast, has, alf, wil } = entrantData.teams
export const drivers = entrantData.drivers
export const teams = entrantData.teams

//Object constructors for players
function Player(name, groups, driverTable, teamTable) {
  this.name = name
  this.groups = groups
  this.driverTable = driverTable
  this.teamTable = teamTable
  this.season = {}
}
//Player data
export const players = {
  david: new Player(
    "david",
    ["aberystwyth", "brr", "herefordshire"],
    [
      ham,
      bot,
      ves,
      per,
      lec,
      vet,
      sai,
      str,
      ric,
      nor,
      alo,
      gas,
      oco,
      tsu,
      zho,
      alb,
      rus,
      sch,
      lat,
      maz,
    ],
    [mer, rbr, fer, ast, mcl, alp, alt, alf, wil, has]
    //Post pre season testing predictions
    //[ham,ves,bot,per,ric,nor,vet,lec,str,alo,sai,gas,ocon,tsu,zho,alb,rus,sch,lat,maz]
    //[mer, rbr, mcl, ast, fer, alp, alt, alf, wil, has]
  ),
  jack: new Player(
    "jack",
    ["aberystwyth", "brr"],
    [
      ham,
      ves,
      bot,
      per,
      vet,
      ric,
      lec,
      str,
      sai,
      alo,
      nor,
      oco,
      gas,
      tsu,
      zho,
      alb,
      rus,
      sch,
      maz,
      lat,
    ],
    [mer, rbr, ast, fer, mcl, alp, alt, alf, wil, has]
  ),
  tom: new Player(
    "tom",
    ["brr", "dyson", "herefordshire"],
    [
      ham,
      ves,
      bot,
      per,
      ric,
      vet,
      nor,
      lec,
      str,
      alo,
      sai,
      oco,
      gas,
      tsu,
      zho,
      alb,
      rus,
      sch,
      maz,
      lat,
    ],
    [mer, rbr, mcl, ast, fer, alp, alt, alf, wil, has]
  ),
  pete: new Player(
    "pete",
    ["herefordshire"],
    [
      ham,
      per,
      ves,
      bot,
      ric,
      vet,
      nor,
      str,
      alo,
      lec,
      sai,
      gas,
      tsu,
      oco,
      zho,
      alb,
      sch,
      maz,
      rus,
      lat,
    ],
    [rbr, mer, mcl, ast, fer, alp, alt, alf, has, wil]
  ),
  will: new Player(
    "will",
    ["aberystwyth"],
    [
      ves,
      ham,
      ric,
      per,
      bot,
      vet,
      alo,
      lec,
      nor,
      sai,
      str,
      gas,
      oco,
      tsu,
      zho,
      alb,
      sch,
      rus,
      maz,
      lat,
    ],
    [rbr, mer, mcl, ast, alp, fer, alt, alf, has, wil]
  ),
  annie: new Player(
    "annie",
    ["dyson"],
    [
      ham,
      ves,
      bot,
      per,
      vet,
      ric,
      lec,
      str,
      nor,
      sai,
      gas,
      oco,
      alo,
      tsu,
      zho,
      rus,
      alb,
      sch,
      maz,
      lat,
    ],
    [mer, rbr, ast, mcl, fer, alp, alt, alf, has, wil]
  ),
  james: new Player(
    "james",
    ["dyson"],
    [
      ham,
      ves,
      bot,
      ric,
      nor,
      per,
      lec,
      str,
      vet,
      sai,
      alo,
      gas,
      oco,
      tsu,
      sch,
      zho,
      maz,
      rus,
      alb,
      lat,
    ],
    [mer, rbr, mcl, ast, fer, alp, alt, has, alf, wil]
  ),
  jacopo: new Player(
    "jacopo",
    ["dyson"],
    [
      ham,
      bot,
      ves,
      ric,
      per,
      vet,
      lec,
      alo,
      sai,
      str,
      nor,
      gas,
      oco,
      zho,
      alb,
      sch,
      rus,
      tsu,
      maz,
      lat,
    ],
    [mer, rbr, mcl, fer, ast, alp, alt, alf, has, wil]
  ),
  alex: new Player(
    "alex",
    ["dyson"],
    [
      ham,
      ves,
      bot,
      lec,
      nor,
      ric,
      vet,
      alo,
      sai,
      per,
      str,
      oco,
      gas,
      tsu,
      zho,
      alb,
      rus,
      sch,
      maz,
      lat,
    ],
    [mer, rbr, mcl, fer, ast, alp, alt, alf, wil, has]
  ),
  formula1: new Player(
    //https://www.formula1.com/en/latest/article.f1-power-rankings-weve-ranked-the-teams-from-10-to-1-after-pre-season.6DKunC8CA9nHHu6MkuiIQQ.html
    "formula1.com",
    ["misc"],
    [],
    [rbr, mer, mcl, alp, fer, alt, ast, alf, wil, has]
  ),
  average: new Player("average", ["misc"], [], []),
  karun: new Player(
    //https://twitter.com/karunchandhok/status/1371374740217159680
    "Karun Sky F1",
    ["misc"],
    [],
    [rbr, mer, alt, mcl, alp, fer, ast, alf, wil, has]
  ),
}
//Object constructors for rounds
class Round {
  constructor(trackName, driverStandings, teamStandings) {
    this.trackName = trackName
    this.standings = {
      driver: driverStandings,
      team: teamStandings,
    }
    this.leaderboards = {
      //{Player:{playerName}, diffTotal:{diffTotal}] - Ordered in least points
      driver: [],
      team: [],
    }
    this.entrantDiffTotals = {
      driver: [],
      team: [],
    }
  }
}
//Round data
export let rounds = [
  new Round(
    "Bahrain GP",
    [
      ham,
      ves,
      bot,
      nor,
      per,
      lec,
      ric,
      sai,
      tsu,
      str,
      zho,
      alb,
      oco,
      rus,
      vet,
      sch,
      gas,
      lat,
      alo,
      maz,
    ],
    [mer, rbr, mcl, fer, alt, ast, alf, alp, wil, has]
  ),
  new Round(
    "Imola GP",
    [
      ham,
      ves,
      nor,
      lec,
      bot,
      sai,
      ric,
      per,
      str,
      gas,
      tsu,
      oco,
      alo,
      zho,
      alb,
      rus,
      vet,
      sch,
      maz,
      lat,
    ],
    [mer, rbr, mcl, fer, alt, ast, alp, alf, wil, has]
  ),
  new Round(
    "Portuguese GP",
    [
      ham,
      ves,
      nor,
      bot,
      lec,
      per,
      ric,
      sai,
      oco,
      gas,
      str,
      alo,
      tsu,
      zho,
      alb,
      vet,
      rus,
      sch,
      maz,
      lat,
    ],
    [mer, rbr, mcl, fer, alp, alt, ast, alf, wil, has]
  ),
  new Round(
    "Spanish GP",
    [
      ham,
      ves,
      bot,
      nor,
      lec,
      per,
      ric,
      sai,
      oco,
      gas,
      str,
      alo,
      tsu,
      zho,
      alb,
      vet,
      rus,
      sch,
      lat,
      maz,
    ],
    [mer, rbr, mcl, fer, alp, alt, ast, alf, wil, has]
  ),
  new Round(
    "Monaco GP",
    [
      ves,
      ham,
      nor,
      bot,
      per,
      lec,
      sai,
      ric,
      gas,
      oco,
      vet,
      str,
      alo,
      tsu,
      alb,
      zho,
      rus,
      lat,
      sch,
      maz,
    ],
    [rbr, mer, mcl, fer, ast, alt, alp, alf, wil, has]
  ),
  new Round(
    "Azerbaijan GP",
    [
      ves,
      ham,
      per,
      nor,
      lec,
      bot,
      sai,
      gas,
      vet,
      ric,
      alo,
      oco,
      str,
      tsu,
      zho,
      alb,
      sch,
      rus,
      maz,
      lat,
    ],
    [rbr, mer, fer, mcl, alt, ast, alp, alf, has, wil]
  ),
  new Round(
    "French GP",
    [
      ves,
      ham,
      per,
      nor,
      bot,
      lec,
      sai,
      gas,
      ric,
      vet,
      alo,
      oco,
      str,
      tsu,
      zho,
      alb,
      rus,
      sch,
      maz,
      lat,
    ],
    [rbr, mer, mcl, fer, alt, ast, alp, alf, wil, has]
  ),
  new Round(
    "Styrian GP",
    [
      ves,
      ham,
      per,
      nor,
      bot,
      lec,
      sai,
      gas,
      ric,
      vet,
      alo,
      str,
      oco,
      tsu,
      zho,
      alb,
      rus,
      sch,
      maz,
      lat,
    ],
    [rbr, mer, mcl, fer, alt, ast, alp, alf, wil, has]
  ),
  new Round(
    "Austrian GP",
    [
      ves,
      ham,
      per,
      nor,
      bot,
      lec,
      sai,
      ric,
      gas,
      vet,
      alo,
      str,
      oco,
      tsu,
      zho,
      alb,
      rus,
      sch,
      maz,
      lat,
    ],
    [rbr, mer, mcl, fer, alt, ast, alp, alf, wil, has]
  ),
  new Round(
    "Hungarian GP",
    [
      ham,
      ves,
      nor,
      bot,
      per,
      lec,
      sai,
      ric,
      vet,
      gas,
      oco,
      alo,
      str,
      tsu,
      lat,
      rus,
      zho,
      alb,
      sch,
      maz,
    ],
    [mer, rbr, mcl, fer, alp, ast, alt, wil, alf, has]
  ),
  new Round(
    "Belgium GP",
    [
      ham,
      ves,
      nor,
      bot,
      per,
      sai,
      lec,
      ric,
      gas,
      oco,
      alo,
      vet,
      tsu,
      str,
      rus,
      lat,
      zho,
      alb,
      sch,
      maz,
    ],
    [rbr, mer, mcl, fer, alp, alt, ast, wil, alf, has]
  ),
  new Round(
    "Dutch GP",
    [
      ves,
      ham,
      bot,
      nor,
      per,
      lec,
      sai,
      gas,
      ric,
      alo,
      oco,
      vet,
      str,
      tsu,
      rus,
      lat,
      zho,
      alb,
      sch,
      maz,
    ],
    [mer, rbr, fer, mcl, alp, alt, ast, wil, alf, has]
  ),
  new Round(
    "Italian GP",
    [
      ves,
      ham,
      bot,
      nor,
      per,
      lec,
      sai,
      ric,
      gas,
      alo,
      oco,
      vet,
      str,
      tsu,
      rus,
      lat,
      zho,
      alb,
      sch,
      maz,
    ],
    [mer, rbr, mcl, fer, alp, alt, ast, wil, alf, has]
  ),
  new Round(
    "Russian GP",
    [
      ham,
      ves,
      bot,
      nor,
      per,
      sai,
      lec,
      ric,
      gas,
      alo,
      oco,
      vet,
      str,
      tsu,
      rus,
      lat,
      zho,
      alb,
      sch,
      maz,
    ],
    [mer, rbr, mcl, fer, alp, alt, ast, wil, alf, has]
  ),
  new Round(
    "Turkish GP",
    [
      ves,
      ham,
      bot,
      nor,
      per,
      sai,
      lec,
      ric,
      gas,
      alo,
      oco,
      vet,
      str,
      tsu,
      rus,
      lat,
      zho,
      alb,
      sch,
      maz,
    ],
    [mer, rbr, mcl, fer, alp, alt, ast, wil, alf, has]
  ),
  new Round(
    "American GP",
    [
      ves,
      ham,
      bot,
      per,
      nor,
      lec,
      sai,
      ric,
      gas,
      alo,
      oco,
      vet,
      str,
      tsu,
      rus,
      lat,
      zho,
      alb,
      sch,
      maz,
    ],
    [mer, rbr, mcl, fer, alp, alt, ast, wil, alf, has]
  ),
  new Round(
    "Mexico GP",
    [
      ves,
      ham,
      bot,
      per,
      nor,
      lec,
      sai,
      ric,
      gas,
      alo,
      oco,
      vet,
      str,
      tsu,
      rus,
      zho,
      lat,
      alb,
      sch,
      maz,
    ],
    [mer, rbr, fer, mcl, alp, alt, ast, wil, alf, has]
  ),
  new Round(
    "Brazilian GP",
    [
      ves,
      ham,
      bot,
      per,
      nor,
      lec,
      sai,
      ric,
      gas,
      alo,
      oco,
      vet,
      str,
      tsu,
      rus,
      zho,
      lat,
      alb,
      sch,
      maz,
    ],
    [mer, rbr, fer, mcl, alp, alt, ast, wil, alf, has]
  ),
  new Round(
    "Qatarian GP",
    [
      ves,
      ham,
      bot,
      per,
      nor,
      lec,
      sai,
      ric,
      gas,
      alo,
      oco,
      vet,
      str,
      tsu,
      rus,
      zho,
      lat,
      alb,
      sch,
      maz,
    ],
    [mer, rbr, fer, mcl, alp, alt, ast, wil, alf, has]
  ),
  new Round(
    "Saudi Arabian GP",
    [
      ves,
      ham,
      bot,
      per,
      lec,
      nor,
      sai,
      ric,
      gas,
      alo,
      oco,
      vet,
      str,
      tsu,
      rus,
      zho,
      lat,
      alb,
      sch,
      maz,
    ],
    [mer, rbr, fer, mcl, alp, alt, ast, wil, alf, has]
  ),
  new Round(
    "Abu Dhabi GP",
    [
      ves,
      ham,
      bot,
      per,
      sai,
      nor,
      lec,
      ric,
      gas,
      alo,
      oco,
      vet,
      str,
      tsu,
      rus,
      zho,
      lat,
      alb,
      sch,
      maz,
    ],
    [mer, rbr, fer, mcl, alp, alt, ast, wil, alf, has]
  ),
]
